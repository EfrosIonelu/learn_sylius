parameters:
    secret: '%env(resolve:APP_SECRET)%'
    app_admin.path_name: '%env(resolve:APP_ADMIN_ROUTING_PATH_NAME)%'
    app.security.admin_regex: "^/%app_admin.path_name%"

security:
    password_hashers:
        Sylius\Component\User\Model\UserInterface: auto
    providers:
        sylius_user_provider:
            id: sylius.user_user_provider.email_or_name_based

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            context: admin
            pattern: "%app.security.admin_regex%"
            provider: sylius_user_provider
            form_login:
                provider: sylius_user_provider
                login_path: sylius_admin_ui_login
                check_path: sylius_admin_ui_login_check
                failure_path: sylius_admin_ui_login
                default_target_path: sylius_admin_ui_dashboard
                use_forward: false
                use_referer: false
            remember_me:
                secret: "%secret%"
                path: "/%app_admin.path_name%"
                name: APP_ADMIN_REMEMBER_ME
                lifetime: 31536000
                remember_me_parameter: _remember_me
            logout:
                path: sylius_admin_ui_logout
                target: sylius_admin_ui_login
                delete_cookies:
                    access_token: ~
        api_login:
            pattern: ^/api/login
            provider: sylius_user_provider
            stateless: true
            json_login:
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            provider: sylius_user_provider
            stateless: true
            entry_point: jwt
            jwt: true

    access_control:
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/(login|token/refresh), roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: ROLE_USER }
        - { path: "%app.security.admin_regex%/login", roles: PUBLIC_ACCESS }
        - { path: "%app.security.admin_regex%/login-organization", roles: PUBLIC_ACCESS }
        - { path: "%app.security.admin_regex%/login-check", roles: PUBLIC_ACCESS }
        - { path: "%app.security.admin_regex%.*", roles: ROLE_ADMIN }
        - { path: "%app.security.admin_regex%.*", roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
